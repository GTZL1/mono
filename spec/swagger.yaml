swagger: "2.0"
info:
  description: "API for tupperdate"
  version: "1.0.0"
  title: "Tupperdate API"
host: "api.tupperdate.me"
basePath: "/"
schemes:
- "http"

tags:
- name: "users"
  description: "Everything about users"

- name: "recipes"
  description: "Everything about recipes"

security:
  - FirebaseAuth: []

paths:
  /users/{userId}:
    put:
      tags:
      - "users"
      summary: "Post a new user given an authentication token"
      description: ""
      operationId: "postNewUser"
      
      consumes:
      - "application/json"
      produces:
      - "application/json"
      
      parameters:
      - in: "path"
        name: "userId"
        description: "ID of user"
        required: true
        type: "string"
      - in: "body"
        name: "newUser"
        description: "NewUser object that needs to be registered"
        required: true
        schema:
          $ref: "#/components/schemas/MyUserDTO"
          
      responses:
        "200":
          description: "OK : if the new user was successfully registered"
          schema:
            $ref: "#/components/schemas/UserDTO"
        "400":
          description: "Bad request : if the json body can't be parsed to a newUser object"
        "401":
          description: "Unauthorized : if the request isn't authenticated"

    get:
      tags:
      - "users"
      summary: "Get a user by id"
      description: ""
      operationId: "getUserById"
      
      produces:
      - "application/json"
      
      parameters:
      - name: "userId"
        in: "path"
        description: "ID of user"
        required: true
        type: "string"
        
      responses:
        "200":
          description: "OK : if the was found"
          schema:
            $ref: "#/components/schemas/UserDTO"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "User not found"

  /recipes:
    post:
      tags:
      - "recipes"
      summary: "Post a recipe as an authenticated user"
      description: ""
      operationId: "postRecipe"
      
      consumes:
      - "application/json"
      produces:
      - "application/json"
      
      parameters:
      - in: "body"
        name: "body"
        description: "NewRecipe object that needs to be registered as the authenticated user"
        required: true
        schema:
          $ref: "#/components/schemas/NewRecipeDTO"
          
      responses:
        "200":
          description: "OK : if the new recipe was successfully registered"
          schema:
            $ref: "#/components/schemas/RecipeDTO"
        "400":
          description: "Bad request : if the request request body could not be parsed to a NewRecipe object"
        "401":
          description: "Unauthorized : if the request isn't authenticated"
          
    get:
      tags:
      - "recipes"
      summary: "Get a number of unseen recipes"
      description: ""
      operationId: "getRecipes"
      
      produces:
      - "application/json"
      
      parameters:
      - name: "numRecipes"
        in: "query"
        description: "number of recipes to fetch"
        required: true
        type: "integer"
        
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/components/schemas/RecipeDTO"
        "400":
          description: "Bad request : if the request parameter isn't an positive integer"
            
  /recipes/{recipeId}/like:
    put:
      tags:
      - "recipes"
      summary: "Like a recipe as an authenticated user"
      description: ""
      operationId: "likeRecipe"
      
      parameters:
      - name: "recipeId"
        in: "path"
        description: "id of the recipe to like"
        required: true
        type: "string"
        
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
          
  /recipes/{recipeId}/dislike:
    put:
      tags:
      - "recipes"
      summary: "Dislike a recipe as an authenticated user"
      description: ""
      operationId: "dislikeRecipe"
      
      parameters:
      - name: "recipeId"
        in: "path"
        description: "id of the recipe to dislike"
        required: true
        type: "string"
        
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
          
components:
  securitySchemes:
    FirebaseAuth:
      type: http
      scheme: bearer

  schemas:
    MyUserDTO:
      type: "object"
      properties:
        displayName:
          type: "string"
      xml:
        name: "NewUser"
  
    UserDTO:
      type: "object"
      properties:
        id:
          type: "string"
        displayName:
          type: "string"
        phone:
          type: "string"
        picture:
          type: "string"
  
    RecipeAttributesDTO:
      type: "object"
      properties:
        hasAllergens:
          type: "boolean"
        vegetarian:
          type: "boolean"
        warm:
          type: "boolean"
  
    NewRecipeDTO:
      type: "object"
      properties:
        title:
          type: "string"
        description:
          type: "string"
        attributes:
          $ref: "#/components/schemas/RecipeAttributesDTO"
  
    RecipeDTO:
      type: "object"
      properties:
        id:
          type: "string"
        title:
          type: "string"
        description:
          type: "string"
        timestamp:
          type: "string"
        picture:
          type: "string"
        attributes:
          $ref: "#/components/schemas/RecipeAttributesDTO"