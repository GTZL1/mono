swagger: "2.0"
info:
  description: "API for tupperdate"
  version: "1.0.0"
  title: "Tupperdate API"
host: "api.tupperdate.me"
basePath: "/"
schemes:
- "http"

tags:
- name: "users"
  description: "Everything about users"

- name: "recipes"
  description: "Everything about recipes"

paths:
  /users:
    post:
      tags:
      - "users"
      summary: "Post a new user given an authentication token"
      description: ""
      operationId: "postNewUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User object that needs to be registered"
        required: true
        schema:
          $ref: "#/definitions/NewUser"
      responses:
        "200":
          description: "OK : if the new user was successfully registered"
          schema:
            $ref: "#/definitions/User"
        "403":
          description: "Unauthorized : if the request isn't authenticated"
        "405":
          description: "Invalid input : if the json body can't be parsed to a newUser object"

    get:
      tags:
      - "users"
      summary: "Get a user by id"
      description: ""
      operationId: "getUserById"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "query"
        description: "ID of user"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK : if the was found"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "User not found"
          
  /recipes:
    post:
      tags:
      - "recipes"
      summary: "Post a recipe as an authenticated user"
      description: ""
      operationId: "postRecipe"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "NewRecipe object that needs to be registered as the authenticated user"
        required: true
        schema:
          $ref: "#/definitions/NewRecipe"
      responses:
        "200":
          description: "OK : if the new recipe was successfully registered"
          schema:
            $ref: "#/definitions/Recipe"
        "400":
          description: "Bad request : if the request request body could not be parsed to a NewRecipe object"
        "403":
          description: "Unauthorized : if the request isn't authenticated"
          
    get:
      tags:
      - "recipes"
      summary: "Get a number of unseen recipes"
      description: ""
      operationId: "getRecipes"
      produces:
      - "application/json"
      parameters:
      - name: "numRecipes"
        in: "query"
        description: "number of recipes to fetch"
        required: true
        type: "integer"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Recipe"
        "400":
          description: "Bad request : if the request parameter isn't an positive integer"
            
  /recipes/like:
    post:
      tags:
      - "recipes"
      summary: "Like a recipe as an authenticated user"
      description: ""
      operationId: "likeRecipe"
      parameters:
      - name: "recipeId"
        in: "query"
        description: "id of the recipe to like"
        required: true
        type: "integer"
      responses:
        "200":
          description: "OK"
          
  /recipes/dislike:
    post:
      tags:
      - "recipes"
      summary: "Dislike a recipe as an authenticated user"
      description: ""
      operationId: "dislikeRecipe"
      parameters:
      - name: "recipeId"
        in: "query"
        description: "id of the recipe to dislike"
        required: true
        type: "integer"
      responses:
        "200":
          description: "OK"
            
definitions:
  NewUser:
    type: "object"
    properties:
      displayName:
        type: "string"
      phone:
        type: "string"
      profilePictureUrl:
        type: "string"
    xml:
      name: "NewUser"
  User:
    type: "object"
    properties:
      id:
        type: "string"
      displayName:
        type: "string"
      phone:
        type: "string"
      profilePictureUrl:
        type: "string"
    xml:
      name: "User"
      
  NewRecipe:
    type: "object"
    properties:
      title:
        type: "string"
      description:
        type: "string"
      foodPictureUrl:
        type: "string"
      attributes:
        type: "string"
    xml:
      name: "NewRecipe"

  Recipe:
    type: "object"
    properties:
      id:
        type: "string"
      title:
        type: "string"
      description:
        type: "string"
      timeAdded:
        type: "integer"
      foodPictureUrl:
        type: "string"
      attributes:
        type: "string"
    xml:
      name: "Recipe"
